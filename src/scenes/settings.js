const { Scenes } = require('telegraf');
const { Markup } = require('telegraf');
const moment = require('moment-timezone');
const userSettingsService = require('../services/userSettingsService');

const settingsScene = new Scenes.WizardScene(
  'settings',
  // –®–∞–≥ 1: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
  async (ctx) => {
    try {
      const userId = ctx.from.id;
      const settings = await userSettingsService.getUserSettings(userId);
      const subscriptionInfo = await userSettingsService.getSubscriptionInfo(userId);
      const referralInfo = await userSettingsService.getReferralInfo(userId);
      
      const subscriptionStatus = subscriptionInfo.isActive 
        ? `–ê–∫—Ç–∏–≤–Ω–∞ (${subscriptionInfo.type})\n–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${moment(subscriptionInfo.expiresAt).format('DD.MM.YYYY')}`
        : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞';
      
      await ctx.reply(
        '‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n' +
        `üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: *${settings.timezone}*\n` +
        `üåê –Ø–∑—ã–∫: *${settings.language === 'ru' ? '–†—É—Å—Å–∫–∏–π' : 'English'}*\n` +
        `üíé –ü–æ–¥–ø–∏—Å–∫–∞: *${subscriptionStatus}*\n` +
        `üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: *${referralInfo.code}*\n` +
        `üë• –†–µ—Ñ–µ—Ä–∞–ª—ã: *${referralInfo.referrals.length}*\n` +
        `üí∞ –ë–æ–Ω—É—Å—ã: *${referralInfo.bonus}‚ÇΩ*\n\n` +
        '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:',
        {
          parse_mode: 'Markdown',
          ...Markup.keyboard([
            ['üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π'],
            ['üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'],
            ['üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', 'üåê –Ø–∑—ã–∫'],
            ['üîô –ù–∞–∑–∞–¥']
          ]).resize()
        }
      );
      
      return ctx.wizard.next();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 1):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞
  async (ctx) => {
    try {
      if (!ctx.message || !ctx.message.text) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
        return;
      }

      switch (ctx.message.text) {
        case 'üîô –ù–∞–∑–∞–¥':
          return ctx.scene.leave();
          
        case 'üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π':
          const userId = ctx.from.id;
          const subscriptionInfo = await userSettingsService.getSubscriptionInfo(userId);
          
          await ctx.reply(
            'üíé *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π*\n\n' +
            `*–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:* ${subscriptionInfo.isActive ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}\n` +
            `*–¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏:* ${subscriptionInfo.type || '–ë–∞–∑–æ–≤–∞—è'}\n` +
            (subscriptionInfo.isActive ? 
              `*–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:* ${moment(subscriptionInfo.expiresAt).format('DD.MM.YYYY')}\n\n` : '\n') +
            '*–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏:*\n' +
            '‚Ä¢ –ë–∞–∑–æ–≤–∞—è (–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è)\n' +
            '‚Ä¢ –°—Ç–∞–Ω–¥–∞—Ä—Ç (200‚ÇΩ/–º–µ—Å—è—Ü) - –¥–æ 5 –∫–∞–Ω–∞–ª–æ–≤\n' +
            '‚Ä¢ –ü—Ä–µ–º–∏—É–º (500‚ÇΩ/–º–µ—Å—è—Ü) - –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∫–∞–Ω–∞–ª–æ–≤\n\n' +
            '*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Premium-–ø–æ–¥–ø–∏—Å–∫–∏:*\n' +
            '‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–º —á–∏—Å–ª–æ–º –∫–∞–Ω–∞–ª–æ–≤\n' +
            '‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n' +
            '‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞—â–∏—Ç—ã\n' +
            '‚Ä¢ –ü—Ä–µ–º–∏—É–º –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('–°—Ç–∞–Ω–¥–∞—Ä—Ç (200‚ÇΩ/–º–µ—Å)', 'subscribe:standard'),
                  Markup.button.callback('–ü—Ä–µ–º–∏—É–º (500‚ÇΩ/–º–µ—Å)', 'subscribe:premium')
                ],
                [
                  Markup.button.callback('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', 'use_promo')
                ],
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º', 'back_to_main')
                ]
              ])
            }
          );
          return ctx.wizard.next();
          
        case 'üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞':
          const userIdRef = ctx.from.id;
          const referralInfo = await userSettingsService.getReferralInfo(userIdRef);
          
          await ctx.reply(
            'üîó *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*\n\n' +
            `*–í–∞—à –ø—Ä–æ–º–æ–∫–æ–¥:* \`${referralInfo.code}\`\n` +
            `*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:* ${referralInfo.referrals.length}\n` +
            `*–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤:* ${referralInfo.bonus}‚ÇΩ\n\n` +
            '*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n' +
            '1. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –ø—Ä–æ–º–æ–∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏\n' +
            '2. –ö–æ–≥–¥–∞ –æ–Ω–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏\n' +
            '3. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ *10%* –æ—Ç —Å—É–º–º—ã –∏—Ö –ø–æ–∫—É–ø–∫–∏\n' +
            '4. –ë–æ–Ω—É—Å—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏\n\n' +
            '*–ö–∞–∂–¥—ã–π, –∫—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à –ø—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏, –ø–æ–ª—É—á–∞–µ—Ç —Å–∫–∏–¥–∫—É 5%*',
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('üîë –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', 'referral_activate')
                ],
                [
                  Markup.button.callback('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤', 'referral_stats')
                ],
                [
                  Markup.button.callback('üìã –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ', 'referral_info')
                ],
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º', 'back_to_main')
                ]
              ])
            }
          );
          return ctx.wizard.next();
          
        case 'üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å':
          await ctx.reply(
            'üåç *–í—ã–±–æ—Ä —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞*\n\n' +
            '–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–∑ —Å–ø–∏—Å–∫–∞ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ–∏—Å–∫.\n' +
            '–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ–±–µ—Å–ø–µ—á–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–π.',
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('Europe/Moscow (+3)', 'timezone:Europe/Moscow'),
                  Markup.button.callback('Europe/London (+0)', 'timezone:Europe/London')
                ],
                [
                  Markup.button.callback('US/Eastern (-5)', 'timezone:America/New_York'),
                  Markup.button.callback('US/Pacific (-8)', 'timezone:America/Los_Angeles')
                ],
                [
                  Markup.button.callback('Asia/Tokyo (+9)', 'timezone:Asia/Tokyo'),
                  Markup.button.callback('Australia/Sydney (+11)', 'timezone:Australia/Sydney')
                ],
                [
                  Markup.button.callback('üîç –ü–æ–∏—Å–∫ –ø–æ –≥–æ—Ä–æ–¥—É', 'timezone_search')
                ],
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º', 'back_to_main')
                ]
              ])
            }
          );
          return ctx.wizard.next();
          
        case 'üåê –Ø–∑—ã–∫':
          await ctx.reply(
            'üåê *–í—ã–±–æ—Ä —è–∑—ã–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞*\n\n' +
            '–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–æ—Ç–∞:',
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('üá∑üá∫ –†—É—Å—Å–∫–∏–π', 'language:ru'),
                  Markup.button.callback('üá¨üáß English', 'language:en')
                ],
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º', 'back_to_main')
                ]
              ])
            }
          );
          return ctx.wizard.next();
          
        default:
          await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
          return;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 2):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.scene.leave();
    }
  },
  // –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Ä–∞–∑–¥–µ–ª–∞—Ö
  async (ctx) => {
    try {
      if (!ctx.callbackQuery && ctx.message?.text === 'üîô –ù–∞–∑–∞–¥') {
        return ctx.wizard.selectStep(0);
      }
      
      if (!ctx.callbackQuery) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
        return;
      }

      const callbackData = ctx.callbackQuery.data;
      const userId = ctx.from.id;

      if (callbackData === 'back_to_main') {
        await ctx.answerCbQuery();
        return ctx.wizard.selectStep(0);
      } 
      
      if (callbackData.startsWith('timezone:')) {
        const timezone = callbackData.split(':')[1];
        try {
          await userSettingsService.updateTimezone(userId, timezone);
          await ctx.answerCbQuery('‚úÖ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
          await ctx.reply(`‚úÖ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${timezone}`);
          return ctx.wizard.selectStep(0);
        } catch (error) {
          await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞');
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
      } 
      
      if (callbackData.startsWith('language:')) {
        const language = callbackData.split(':')[1];
        try {
          await userSettingsService.updateLanguage(userId, language);
          const languageName = language === 'ru' ? '–†—É—Å—Å–∫–∏–π' : 'English';
          await ctx.answerCbQuery('‚úÖ –Ø–∑—ã–∫ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
          await ctx.reply(`‚úÖ –Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${languageName}`);
          return ctx.wizard.selectStep(0);
        } catch (error) {
          await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —è–∑—ã–∫–∞');
          await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —è–∑—ã–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
      } 
      
      if (callbackData.startsWith('subscribe:')) {
        const subscriptionType = callbackData.split(':')[1];
        
        // –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –æ–ø–ª–∞—Ç—ã
        await ctx.answerCbQuery('üöß –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å–∏—Å—Ç–µ–º—É –æ–ø–ª–∞—Ç—ã...');
        
        // –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        const expiresAt = new Date();
        expiresAt.setMonth(expiresAt.getMonth() + 1);
        
        await userSettingsService.updateSubscription(userId, subscriptionType, expiresAt);
        
        await ctx.reply(
          `‚úÖ *–ü–æ–¥–ø–∏—Å–∫–∞ "${subscriptionType}" —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!*\n\n` +
          `–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: ${moment(expiresAt).format('DD.MM.YYYY')}\n\n` +
          '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø—Ä–æ–µ–∫—Ç–∞! –¢–µ–ø–µ—Ä—å –≤–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞.',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π'],
              ['üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'],
              ['üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', 'üåê –Ø–∑—ã–∫'],
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
        
        return ctx.wizard.selectStep(0);
      } 
      
      if (callbackData === 'use_promo') {
        await ctx.answerCbQuery();
        await ctx.reply(
          'üîë *–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥*\n\n' +
          '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–∏–¥–∫–∏ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É:',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
        return ctx.wizard.selectStep(4);
      } 
      
      if (callbackData === 'referral_activate') {
        await ctx.answerCbQuery();
        await ctx.reply(
          'üîë *–ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞*\n\n' +
          '–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å:',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
        return ctx.wizard.selectStep(5);
      } 
      
      if (callbackData === 'referral_stats') {
        const referralInfo = await userSettingsService.getReferralInfo(userId);
        
        if (referralInfo.referrals.length === 0) {
          await ctx.answerCbQuery('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤');
          await ctx.reply(
            'üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤*\n\n' +
            '–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤. –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–Ω—É—Å—ã!',
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ', 'back_to_referral')
                ]
              ])
            }
          );
        } else {
          await ctx.answerCbQuery();
          
          // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞–º
          await ctx.reply(
            'üìä *–î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤*\n\n' +
            `–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${referralInfo.referrals.length}\n` +
            `–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤: ${referralInfo.bonus}‚ÇΩ\n\n` +
            '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü:\n' +
            `‚Ä¢ –ù–æ–≤—ã—Ö —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: ${Math.min(referralInfo.referrals.length, 3)}\n` +
            `‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –±–æ–Ω—É—Å–æ–≤: ${Math.floor(referralInfo.bonus * 0.4)}‚ÇΩ`,
            {
              parse_mode: 'Markdown',
              ...Markup.inlineKeyboard([
                [
                  Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ', 'back_to_referral')
                ]
              ])
            }
          );
        }
        return;
      } 
      
      if (callbackData === 'referral_info') {
        await ctx.answerCbQuery();
        await ctx.reply(
          'üìã *–û —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ*\n\n' +
          '*–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:*\n' +
          '1. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥\n' +
          '2. –í—ã –¥–µ–ª–∏—Ç–µ—Å—å —ç—Ç–∏–º –∫–æ–¥–æ–º —Å –¥—Ä—É–∑—å—è–º–∏\n' +
          '3. –ö–æ–≥–¥–∞ –¥—Ä—É–≥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤–∞—à –∫–æ–¥ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏, –µ–º—É –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Å–∫–∏–¥–∫–∞ 5%\n' +
          '4. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 10% –æ—Ç —Å—É–º–º—ã –ø–æ–∫—É–ø–∫–∏ –≤ –≤–∏–¥–µ –±–æ–Ω—É—Å–æ–≤\n' +
          '5. –ë–æ–Ω—É—Å—ã –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–¥–ø–∏—Å–∫–∏\n\n' +
          '*–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:*\n' +
          '‚Ä¢ –ù–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤\n' +
          '‚Ä¢ –ë–æ–Ω—É—Å—ã –Ω–∞—á–∏—Å–ª—è—é—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ\n' +
          '‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ —Ç–∏–ø—ã –ø–æ–¥–ø–∏—Å–æ–∫',
          {
            parse_mode: 'Markdown',
            ...Markup.inlineKeyboard([
              [
                Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ', 'back_to_referral')
              ]
            ])
          }
        );
        return;
      } 
      
      if (callbackData === 'back_to_referral') {
        await ctx.answerCbQuery();
        ctx.message = { text: 'üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞' };
        return ctx.wizard.selectStep(1);
      } 
      
      if (callbackData === 'timezone_search') {
        await ctx.answerCbQuery();
        await ctx.reply(
          'üîç *–ü–æ–∏—Å–∫ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞*\n\n' +
          '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞:',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
        return ctx.wizard.selectStep(6);
      }
      
      await ctx.answerCbQuery();
      await ctx.reply('–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 3):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.wizard.selectStep(0);
    }
  },
  // –®–∞–≥ 4: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø—Ä–æ–º–æ–∫–æ–¥–∞ –¥–ª—è —Å–∫–∏–¥–∫–∏
  async (ctx) => {
    try {
      if (!ctx.message || !ctx.message.text) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.');
        return;
      }
      
      if (ctx.message.text === 'üîô –ù–∞–∑–∞–¥') {
        return ctx.wizard.selectStep(0);
      }
      
      const promoCode = ctx.message.text.trim().toUpperCase();
      
      // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–∞ –∏ —Ä–∞—Å—á–µ—Ç —Å–∫–∏–¥–∫–∏
      // –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∂–µ–º –æ—Ç–≤–µ—Ç
      
      await ctx.reply(
        '‚úÖ *–ü—Ä–æ–º–æ–∫–æ–¥ –ø—Ä–∏–Ω—è—Ç!*\n\n' +
        `–ü—Ä–æ–º–æ–∫–æ–¥ \`${promoCode}\` –ø—Ä–∏–º–µ–Ω–µ–Ω.\n` +
        '–í–∞–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ 5% –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É.\n\n' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –ø–æ–∫—É–ø–∫–∏ —Å–æ —Å–∫–∏–¥–∫–æ–π:',
        {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard([
            [
              Markup.button.callback('–°—Ç–∞–Ω–¥–∞—Ä—Ç (190‚ÇΩ/–º–µ—Å)', 'subscribe:standard'),
              Markup.button.callback('–ü—Ä–µ–º–∏—É–º (475‚ÇΩ/–º–µ—Å)', 'subscribe:premium')
            ],
            [
              Markup.button.callback('üîô –û—Ç–º–µ–Ω–∞', 'back_to_main')
            ]
          ])
        }
      );
      
      return ctx.wizard.selectStep(3);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 4):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.wizard.selectStep(0);
    }
  },
  // –®–∞–≥ 5: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
  async (ctx) => {
    try {
      if (!ctx.message || !ctx.message.text) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.');
        return;
      }
      
      if (ctx.message.text === 'üîô –ù–∞–∑–∞–¥') {
        return ctx.wizard.selectStep(0);
      }
      
      const userId = ctx.from.id;
      const promoCode = ctx.message.text.trim().toUpperCase();
      
      try {
        await userSettingsService.activateReferralCode(userId, promoCode);
        await ctx.reply(
          '‚úÖ *–ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!*\n\n' +
          '–ü—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–∫—É–ø–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ —Å–∫–∏–¥–∫–∞ 5%.\n' +
          '–í–ª–∞–¥–µ–ª–µ—Ü –ø—Ä–æ–º–æ–∫–æ–¥–∞ –ø–æ–ª—É—á–∏—Ç 10% –æ—Ç —Å—É–º–º—ã –≤–∞—à–µ–π –ø–æ–∫—É–ø–∫–∏ –≤ –≤–∏–¥–µ –±–æ–Ω—É—Å–æ–≤.',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üíé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–æ–π'],
              ['üîó –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞'],
              ['üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', 'üåê –Ø–∑—ã–∫'],
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
      } catch (error) {
        await ctx.reply(
          '‚ùå *–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞*\n\n' +
          '–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n' +
          '‚Ä¢ –ù–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥\n' +
          '‚Ä¢ –í—ã —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥\n' +
          '‚Ä¢ –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–º–æ–∫–æ–¥',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
      }
      
      return ctx.wizard.selectStep(0);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 5):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.wizard.selectStep(0);
    }
  },
  // –®–∞–≥ 6: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞
  async (ctx) => {
    try {
      if (!ctx.message || !ctx.message.text) {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥.');
        return;
      }
      
      if (ctx.message.text === 'üîô –ù–∞–∑–∞–¥') {
        return ctx.wizard.selectStep(0);
      }
      
      const searchQuery = ctx.message.text.toLowerCase();
      const timezones = moment.tz.names();
      const matches = timezones.filter(tz => 
        tz.toLowerCase().includes(searchQuery)
      );
      
      if (matches.length === 0) {
        await ctx.reply(
          '‚ùå *–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤*\n\n' +
          '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω–∞:',
          {
            parse_mode: 'Markdown',
            ...Markup.keyboard([
              ['üîô –ù–∞–∑–∞–¥']
            ]).resize()
          }
        );
        return;
      }
      
      // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–æ 8, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–≥—Ä—É–∂–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
      const limitedMatches = matches.slice(0, 8);
      
      // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥
      const buttons = [];
      for (let i = 0; i < limitedMatches.length; i += 2) {
        const row = [];
        row.push(Markup.button.callback(limitedMatches[i], `timezone:${limitedMatches[i]}`));
        
        if (i + 1 < limitedMatches.length) {
          row.push(Markup.button.callback(limitedMatches[i + 1], `timezone:${limitedMatches[i + 1]}`));
        }
        
        buttons.push(row);
      }
      
      buttons.push([Markup.button.callback('üîô –ù–∞–∑–∞–¥ –∫ —á–∞—Å–æ–≤—ã–º –ø–æ—è—Å–∞–º', 'back_to_timezone')]);
      
      await ctx.reply(
        'üîç *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —á–∞—Å–æ–≤—ã—Ö –ø–æ—è—Å–æ–≤*\n\n' +
        '–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –∏–∑ —Å–ø–∏—Å–∫–∞:',
        {
          parse_mode: 'Markdown',
          ...Markup.inlineKeyboard(buttons)
        }
      );
      
      return ctx.wizard.selectStep(3);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (—à–∞–≥ 6):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.wizard.selectStep(0);
    }
  }
);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
settingsScene.action(/timezone:(.+)/, (ctx) => ctx.wizard.selectStep(3));
settingsScene.action(/language:(.+)/, (ctx) => ctx.wizard.selectStep(3));
settingsScene.action(/subscribe:(.+)/, (ctx) => ctx.wizard.selectStep(3));
settingsScene.action('back_to_main', (ctx) => ctx.wizard.selectStep(0));
settingsScene.action('back_to_referral', (ctx) => ctx.wizard.selectStep(1));
settingsScene.action('back_to_timezone', (ctx) => {
  ctx.message = { text: 'üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å' };
  return ctx.wizard.selectStep(1);
});

module.exports = settingsScene; 