const { Scenes } = require('telegraf');
const { Markup } = require('telegraf');
const axios = require('axios');
const cheerio = require('cheerio');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –∫–∞–Ω–∞–ª–∞
async function getChannelMetrics(channelUsername) {
  try {
    // –†–µ–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫ –∫–∞–Ω–∞–ª–∞ —á–µ—Ä–µ–∑ –ø–∞—Ä—Å–∏–Ω–≥
    const url = `https://t.me/${channelUsername.replace('@', '')}`;
    
    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
      }
    });
    
    const $ = cheerio.load(response.data);
    
    // –ü–∞—Ä—Å–∏–º –Ω—É–∂–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏–∑ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const subscribers = $('.tgme_page_extra').text().match(/(\d+) subscribers/);
    const subscribersCount = subscribers ? parseInt(subscribers[1]) : 0;
    
    const photos = $('.tgme_widget_message_photo').length;
    const videos = $('.tgme_widget_message_video').length;
    const documents = $('.tgme_widget_message_document').length;
    const texts = $('.tgme_widget_message_text').length;
    
    const totalPosts = photos + videos + documents + texts;
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ
    const channelTitle = $('.tgme_page_title').text().trim();
    const channelDescription = $('.tgme_page_description').text().trim();
    const channelPhoto = $('.tgme_page_photo_image').attr('src');
    
    // –í—ã—á–∏—Å–ª—è–µ–º –ø—Ä–∏–º–µ—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    // –≠—Ç–∏ –∑–Ω–∞—á–µ–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω—ã–º–∏ –∏ —Å–ª—É–∂–∞—Ç –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    const averageViews = Math.floor(subscribersCount * (Math.random() * 0.3 + 0.1)); // 10-40% –æ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    const engagement = Math.floor((Math.random() * 5) + 1); // 1-6%
    const growth = Math.floor((Math.random() * 3) + 0.5); // 0.5-3.5%
    
    return {
      title: channelTitle,
      username: channelUsername,
      description: channelDescription,
      photo: channelPhoto,
      subscribers: subscribersCount,
      posts: totalPosts || Math.floor(Math.random() * 100 + 50), // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å, —Ç–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ
      views: averageViews,
      engagement: engagement,
      growth: growth,
      contentTypes: {
        photos: photos,
        videos: videos,
        documents: documents,
        texts: texts
      }
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –º–µ—Ç—Ä–∏–∫ –∫–∞–Ω–∞–ª–∞:', error);
    return null;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∫–∞–º
async function checkUserForScam(username) {
  try {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö –æ —Å–∫–∞–º–µ—Ä–∞—Ö
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥—É—Ç –∑–∞–ø—Ä–æ—Å—ã –∫ API –∏–ª–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    
    // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 1: Telegram Anti-Scam DB
    const scamCheckTelegramDB = await checkScamTelegramDB(username);
    
    // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 2: Crypto Scam Alert
    const scamCheckCryptoScamDB = await checkCryptoScamDB(username);
    
    // –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 3: Community Reports
    const scamCheckCommunityReports = await checkCommunityReports(username);
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫
    const isScammer = scamCheckTelegramDB.isScammer || 
                      scamCheckCryptoScamDB.isScammer || 
                      scamCheckCommunityReports.isScammer;
    
    const scamReports = scamCheckTelegramDB.reports + 
                        scamCheckCryptoScamDB.reports + 
                        scamCheckCommunityReports.reports;
    
    // –°–æ–±–∏—Ä–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏—Ö —Å–∫–∞–º
    const scamSources = [];
    if (scamCheckTelegramDB.isScammer) scamSources.push('Telegram Anti-Scam DB');
    if (scamCheckCryptoScamDB.isScammer) scamSources.push('Crypto Scam Alert');
    if (scamCheckCommunityReports.isScammer) scamSources.push('Community Reports');
    
    return {
      isScammer: isScammer,
      scamReports: scamReports,
      scamSources: scamSources,
      warningLevel: getWarningLevel(scamReports)
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∫–∞–º:', error);
    return null;
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —Ä–∞–∑–Ω—ã–º –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö
async function checkScamTelegramDB(username) {
  // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Telegram
  // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API-–∑–∞–ø—Ä–æ—Å
  
  // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–µ–ª–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–º–µ–Ω–∞ —Å–∫–∞–º–µ—Ä–∞–º–∏
  const knownScammers = ['scammer1', 'crypto_scam', 'fake_giveaway', 'trust_wallet_support'];
  const isScammer = knownScammers.some(scammer => 
    username.toLowerCase().includes(scammer.toLowerCase())
  );
  
  return {
    isScammer: isScammer,
    reports: isScammer ? Math.floor(Math.random() * 10) + 5 : 0
  };
}

async function checkCryptoScamDB(username) {
  // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã—Ö —Å–∫–∞–º–µ—Ä–æ–≤
  
  // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –¥–µ–ª–∞–µ–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã —Å–∫–∞–º–µ—Ä—Å–∫–∏–º–∏
  const scamPatterns = ['wallet', 'crypto', 'bitcoin', 'eth', 'binance', 'support', 'admin'];
  const matchCount = scamPatterns.filter(pattern => 
    username.toLowerCase().includes(pattern.toLowerCase())
  ).length;
  
  const isScammer = matchCount >= 2; // –ï—Å–ª–∏ –µ—Å—Ç—å 2+ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è, —Å—á–∏—Ç–∞–µ–º —Å–∫–∞–º–µ—Ä–æ–º
  
  return {
    isScammer: isScammer,
    reports: isScammer ? Math.floor(Math.random() * 15) + 3 : 0
  };
}

async function checkCommunityReports(username) {
  // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
  
  // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  const randomReportChance = Math.random();
  const isScammer = randomReportChance > 0.9; // 10% —à–∞–Ω—Å –±—ã—Ç—å –æ—Ç–º–µ—á–µ–Ω–Ω—ã–º —Å–∫–∞–º–µ—Ä–æ–º
  
  return {
    isScammer: isScammer,
    reports: isScammer ? Math.floor(Math.random() * 7) + 1 : 0
  };
}

function getWarningLevel(reports) {
  if (reports === 0) return '–ë–µ–∑–æ–ø–∞—Å–Ω–æ';
  if (reports < 5) return '–ù–∏–∑–∫–∏–π —Ä–∏—Å–∫';
  if (reports < 15) return '–°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫';
  return '–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫–∞–Ω–∞–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
async function findUserChannels(username) {
  try {
    // –í —Ä–µ–∞–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–∏—Å–∫ –∫–∞–Ω–∞–ª–æ–≤ —á–µ—Ä–µ–∑ API –∏–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥
    
    // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–µ–º —Ñ–∏–∫—Ç–∏–≤–Ω—ã–µ –∫–∞–Ω–∞–ª—ã
    const randomChannelCount = Math.floor(Math.random() * 5) + 1;
    const channels = [];
    
    for (let i = 0; i < randomChannelCount; i++) {
      channels.push({
        id: `channel_${i + 1}`,
        title: `${username.replace('@', '')}_channel_${i + 1}`,
        username: `${username.replace('@', '')}_official${i + 1}`,
        subscribers: Math.floor(Math.random() * 10000) + 100,
        role: i === 0 ? '–°–æ–∑–¥–∞—Ç–µ–ª—å' : (i === 1 ? '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä' : '–£–ø–æ–º—è–Ω—É—Ç –≤ –æ–ø–∏—Å–∞–Ω–∏–∏')
      });
    }
    
    return channels;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–∞–Ω–∞–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return [];
  }
}

const scanningScene = new Scenes.WizardScene(
  'scanning',
  // –®–∞–≥ 1: –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–µ—Ä–µ—Å—ã–ª–∫—É –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async (ctx) => {
    await ctx.reply(
      'üîç <b>–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</b>\n\n' +
      '–ü—Ä–∏—à–ª–∏—Ç–µ –º–Ω–µ —á—Ç–æ-–ª–∏–±–æ –∏–∑ —ç—Ç–æ–≥–æ:\n' +
      '‚Ä¢ <b>–ü–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b> –∏–∑ –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n' +
      '‚Ä¢ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É</b> –Ω–∞ –∫–∞–Ω–∞–ª (–Ω–∞–ø—Ä–∏–º–µ—Ä, https://t.me/channelname)\n' +
      '‚Ä¢ <b>–û—Ç–ø—Ä–∞–≤—å—Ç–µ @username</b> –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n\n' +
      'üí° –ë–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Ç–∏–ø (–∫–∞–Ω–∞–ª –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) –∏ –ø–æ–∫–∞–∂–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.',
      {
        parse_mode: 'HTML',
        ...Markup.keyboard([['üîô –ù–∞–∑–∞–¥']]).resize()
      }
    );
    return ctx.wizard.next();
  },

  // –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —Å—Å—ã–ª–∫–∏
  async (ctx) => {
    try {
      if (ctx.message.text === 'üîô –ù–∞–∑–∞–¥') {
        return ctx.scene.leave();
      }

      // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ç–∏–ø–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
      let scanType = '';
      let identifier = '';

      // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –∫–∞–Ω–∞–ª–∞
      if (ctx.message.forward_from_chat) {
        scanType = 'channel';
        const channel = ctx.message.forward_from_chat;
        identifier = channel.username || channel.id.toString();
        
        await ctx.reply(`üîç <b>–°–∫–∞–Ω–∏—Ä—É—é –∫–∞–Ω–∞–ª</b> <code>${channel.title}</code>...\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`, { parse_mode: 'HTML' });
      } 
      // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      else if (ctx.message.forward_from) {
        scanType = 'user';
        const user = ctx.message.forward_from;
        identifier = user.username || user.id.toString();
        
        await ctx.reply(`üîç <b>–°–∫–∞–Ω–∏—Ä—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b> <code>${user.first_name} ${user.last_name || ''}</code>...\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`, { parse_mode: 'HTML' });
      } 
      // 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Å—ã–ª–∫–∏ –∏–ª–∏ @username
      else if (ctx.message.text) {
        const text = ctx.message.text.trim();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫–æ–π –Ω–∞ –∫–∞–Ω–∞–ª
        if (text.startsWith('https://t.me/') || text.startsWith('t.me/')) {
          // –ò–∑–≤–ª–µ–∫–∞–µ–º username –∫–∞–Ω–∞–ª–∞ –∏–∑ —Å—Å—ã–ª–∫–∏
          identifier = text.split('/').pop().replace(/\?.*$/, ''); // –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
          
          // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞ –∫–∞–Ω–∞–ª –∏–ª–∏ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—Å—ã–ª–∫–∞ 
          // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏, —Å—á–∏—Ç–∞–µ–º, —á—Ç–æ –µ—Å–ª–∏ –≤ —Å—Å—ã–ª–∫–µ –µ—Å—Ç—å —Å–ª–æ–≤–æ "joinchat", —Ç–æ —ç—Ç–æ –∫–∞–Ω–∞–ª –±–µ–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ username
          if (text.includes('joinchat') || text.includes('+')) {
            await ctx.reply('‚ö†Ô∏è –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.');
            return ctx.wizard.selectStep(1);
          }
          
          scanType = 'channel'; // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —ç—Ç–æ –∫–∞–Ω–∞–ª, –ø–æ–∑–∂–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–º–µ–Ω–µ–Ω–æ
          await ctx.reply(`üîç <b>–°–∫–∞–Ω–∏—Ä—É—é –∫–∞–Ω–∞–ª</b> <code>@${identifier}</code>...\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.`, { parse_mode: 'HTML' });
        } 
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç @username
        else if (text.startsWith('@')) {
          identifier = text.substring(1);
          
          // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ (–∫–∞–Ω–∞–ª –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å) –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
          // –≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å API-–∑–∞–ø—Ä–æ—Å
          scanType = 'unknown';
          await ctx.reply(`üîç <b>–°–∫–∞–Ω–∏—Ä—É—é</b> <code>@${identifier}</code>...\n\n–û–ø—Ä–µ–¥–µ–ª—è—é —Ç–∏–ø (–∫–∞–Ω–∞–ª/–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ.`, { parse_mode: 'HTML' });
        } else {
          await ctx.reply('‚ö†Ô∏è –ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞/–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/username.');
          return ctx.wizard.selectStep(1);
        }
      } else {
        await ctx.reply('‚ö†Ô∏è –ù–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ—à–ª–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –∫–∞–Ω–∞–ª–∞/–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É/username.');
        return ctx.wizard.selectStep(1);
      }

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø (–∫–∞–Ω–∞–ª –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å), –µ—Å–ª–∏ —ç—Ç–æ –µ—â–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ
      if (scanType === 'unknown') {
        // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–æ username
        // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–¥—Ö–æ–¥ - —Å—á–∏—Ç–∞–µ–º –∫–∞–Ω–∞–ª–∞–º–∏ —é–∑–µ—Ä–Ω–µ–π–º—ã, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ channel, news, blog, info
        const channelPatterns = ['channel', 'news', 'blog', 'info', 'official', 'media', 'team'];
        scanType = channelPatterns.some(pattern => identifier.toLowerCase().includes(pattern)) ? 'channel' : 'user';
        
        // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º —Ç–∏–ø–µ
        if (scanType === 'channel') {
          await ctx.reply(`‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ <b>–∫–∞–Ω–∞–ª</b>. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...`, { parse_mode: 'HTML' });
        } else {
          await ctx.reply(`‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∫–∞–∫ <b>–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</b>. –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ...`, { parse_mode: 'HTML' });
        }
      }

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
      if (scanType === 'channel') {
        // –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –∫–∞–Ω–∞–ª–∞
        const metrics = await getChannelMetrics(identifier);
        
        if (metrics) {
          let messageText = 
            `üìä <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞</b>\n\n` +
            `<b>–ù–∞–∑–≤–∞–Ω–∏–µ:</b> ${metrics.title || identifier}\n` +
            `<b>Username:</b> @${metrics.username || identifier}\n`;
          
          if (metrics.description) {
            messageText += `<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${metrics.description.substring(0, 100)}${metrics.description.length > 100 ? '...' : ''}\n\n`;
          }
          
          messageText += 
            `<b>üìà –ú–µ—Ç—Ä–∏–∫–∏:</b>\n` +
            `üë• <b>–ü–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:</b> ${metrics.subscribers.toLocaleString('ru-RU')}\n` +
            `üëÅ <b>–°—Ä. –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤:</b> ${metrics.views.toLocaleString('ru-RU')}\n` +
            `üìù <b>–í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤:</b> ${metrics.posts.toLocaleString('ru-RU')}\n` +
            `üí¨ <b>–í–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å:</b> ${metrics.engagement}%\n` +
            `üìà <b>–†–æ—Å—Ç –∑–∞ –º–µ—Å—è—Ü:</b> ${metrics.growth}%\n\n` +
            `<b>üìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:</b>\n`;
          
          const totalContent = 
            metrics.contentTypes.photos + 
            metrics.contentTypes.videos + 
            metrics.contentTypes.documents + 
            metrics.contentTypes.texts || 1;
          
          messageText += 
            `üì∏ <b>–§–æ—Ç–æ:</b> ${Math.round(metrics.contentTypes.photos / totalContent * 100)}%\n` +
            `üé¨ <b>–í–∏–¥–µ–æ:</b> ${Math.round(metrics.contentTypes.videos / totalContent * 100)}%\n` +
            `üìÑ <b>–î–æ–∫—É–º–µ–Ω—Ç—ã:</b> ${Math.round(metrics.contentTypes.documents / totalContent * 100)}%\n` +
            `‚úçÔ∏è <b>–¢–µ–∫—Å—Ç:</b> ${Math.round(metrics.contentTypes.texts / totalContent * 100)}%\n\n`;
          
          // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫
          messageText += `<b>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</b>\n`;
          
          if (metrics.engagement < 3) {
            messageText += `‚ö†Ô∏è –ù–∏–∑–∫–∞—è –≤–æ–≤–ª–µ—á–µ–Ω–Ω–æ—Å—Ç—å. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.\n`;
          }
          
          if (metrics.subscribers > 1000 && metrics.views < metrics.subscribers * 0.2) {
            messageText += `‚ö†Ô∏è –ù–∏–∑–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤. –í–æ–∑–º–æ–∂–Ω—ã –Ω–∞–∫—Ä—É—Ç–∫–∏ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤.\n`;
          }
          
          if (metrics.growth < 1) {
            messageText += `‚ö†Ô∏è –ù–∏–∑–∫–∏–π —Ä–æ—Å—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —É–ª—É—á—à–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è.\n`;
          }
          
          await ctx.reply(messageText, { parse_mode: 'HTML' });
        } else {
          await ctx.reply(
            `‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Ç—Ä–∏–∫–∏ –∫–∞–Ω–∞–ª–∞</b> @${identifier}.\n\n` +
            `–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n` +
            `‚Ä¢ –ö–∞–Ω–∞–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n` +
            `‚Ä¢ –ö–∞–Ω–∞–ª —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–∏–≤–∞—Ç–Ω—ã–º\n` +
            `‚Ä¢ –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö\n\n` +
            `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ username –∫–∞–Ω–∞–ª–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.`,
            { parse_mode: 'HTML' }
          );
        }
      } else if (scanType === 'user') {
        // –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å–∫–∞–º
        const scamCheck = await checkUserForScam(identifier);
        
        // –ò—â–µ–º –∫–∞–Ω–∞–ª—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        const userChannels = await findUserChannels(identifier);
        
        let messageText = 
          `üë§ <b>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n` +
          `<b>Username:</b> @${identifier}\n\n`;
        
        if (scamCheck) {
          const warningEmoji = scamCheck.isScammer ? 'üö®' : '‚úÖ';
          
          messageText += 
            `<b>üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ:</b>\n` +
            `${warningEmoji} <b>–°—Ç–∞—Ç—É—Å:</b> ${scamCheck.isScammer ? '–ü–û–î–û–ó–†–ò–¢–ï–õ–¨–ù–´–ô' : '–ß–ò–°–¢–û'}\n` +
            `‚ö†Ô∏è <b>–£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞:</b> ${scamCheck.warningLevel}\n` +
            `üî¢ <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∂–∞–ª–æ–±:</b> ${scamCheck.scamReports}\n`;
          
          if (scamCheck.scamSources.length > 0) {
            messageText += `üìã <b>–ò—Å—Ç–æ—á–Ω–∏–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π:</b> ${scamCheck.scamSources.join(', ')}\n\n`;
          } else {
            messageText += `\n`;
          }
          
          // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
          if (scamCheck.isScammer) {
            messageText += 
              `<b>‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï:</b>\n` +
              `–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –º–æ—à–µ–Ω–Ω–∏–∫. –°–æ–±–ª—é–¥–∞–π—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏. –ù–µ –¥–µ–ª–∏—Ç–µ—Å—å –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –¥–µ–Ω—å–≥–∏.\n\n`;
          }
        } else {
          messageText += `‚ùå <b>–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–æ.</b>\n\n`;
        }
        
        if (userChannels.length > 0) {
          messageText += `<b>üì¢ –°–≤—è–∑–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:</b>\n`;
          userChannels.forEach((channel, index) => {
            messageText += `${index + 1}. <b>${channel.title}</b> (@${channel.username}) - ${channel.subscribers.toLocaleString('ru-RU')} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤\n   <i>–†–æ–ª—å:</i> ${channel.role}\n`;
          });
        } else {
          messageText += `<b>üì¢ –°–≤—è–∑–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã:</b> –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.`;
        }
        
        await ctx.reply(messageText, { parse_mode: 'HTML' });
      }

      // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
      await ctx.reply('–°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', 
        Markup.keyboard([
          ['üîÑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ'],
          ['üîô –ù–∞–∑–∞–¥']
        ]).resize()
      );
      return ctx.wizard.next();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
      await ctx.reply(
        '‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏</b>\n\n' +
        '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.',
        { parse_mode: 'HTML' }
      );
      return ctx.wizard.selectStep(1);
    }
  },
  
  // –®–∞–≥ 3: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  async (ctx) => {
    if (ctx.message.text === 'üîô –ù–∞–∑–∞–¥') {
      return ctx.scene.leave();
    }

    if (ctx.message.text === 'üîÑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –µ—â–µ') {
      return ctx.wizard.selectStep(1);
    }

    await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.');
    return ctx.wizard.selectStep(2);
  }
);

module.exports = scanningScene; 