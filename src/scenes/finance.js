const { Scenes } = require('telegraf');
const { Markup } = require('telegraf');

const financeScene = new Scenes.WizardScene(
  'finance',
  // –®–∞–≥ 1: –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤
  async (ctx) => {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
      await ctx.reply(
        'üíµ *–§–∏–Ω–∞–Ω—Å—ã*\n\n' +
        '–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –ó–¥–µ—Å—å –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–∏–º–∏ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –±—é–¥–∂–µ—Ç–∞–º–∏, –¥–æ—Ö–æ–¥–∞–º–∏ –æ—Ç –ø–æ—Å—Ç–æ–≤ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤.\n\n' +
        '–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:\n' +
        '- –£—á–µ—Ç –¥–æ—Ö–æ–¥–æ–≤ –æ—Ç —Ä–µ–∫–ª–∞–º—ã\n' +
        '- –£—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ —Ä–µ–∫–ª–∞–º—É\n' +
        '- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n' +
        '- –≠–∫—Å–ø–æ—Ä—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤\n' +
        '- –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–Ω—ã—Ö —Å–∏—Å—Ç–µ–º',
        {
          parse_mode: 'Markdown',
          ...Markup.keyboard([
            ['üí∞ –î–æ—Ö–æ–¥—ã', 'üí∏ –†–∞—Å—Ö–æ–¥—ã'],
            ['üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', 'üìã –û—Ç—á–µ—Ç—ã'],
            ['üîô –ù–∞–∑–∞–¥']
          ]).resize()
        }
      );
      
      return ctx.wizard.next();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ (—à–∞–≥ 1):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.scene.leave();
    }
  },
  
  // –®–∞–≥ 2: –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–∑ –º–µ–Ω—é
  async (ctx) => {
    try {
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫
      if (ctx.message && ctx.message.text) {
        switch (ctx.message.text) {
          case 'üîô –ù–∞–∑–∞–¥':
            return ctx.scene.leave();
            
          case 'üí∞ –î–æ—Ö–æ–¥—ã':
          case 'üí∏ –†–∞—Å—Ö–æ–¥—ã':
          case 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
          case 'üìã –û—Ç—á–µ—Ç—ã':
            await ctx.reply(
              'üöß *–†–∞–∑–¥–µ–ª –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ*\n\n' +
              '–≠—Ç–æ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—è–≤–∏—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏. –ù–∞—à–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å–µ—Ä–¥–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–∞–¥ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π —ç—Ç–æ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏.',
              {
                parse_mode: 'Markdown',
                ...Markup.keyboard([
                  ['üîô –ö —Ñ–∏–Ω–∞–Ω—Å–∞–º']
                ]).resize()
              }
            );
            
            return ctx.wizard.next();
          
          default:
            await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
            return;
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ (—à–∞–≥ 2):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.scene.leave();
    }
  },
  
  // –®–∞–≥ 3: –í–æ–∑–≤—Ä–∞—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤
  async (ctx) => {
    try {
      if (ctx.message && ctx.message.text === 'üîô –ö —Ñ–∏–Ω–∞–Ω—Å–∞–º') {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π —à–∞–≥
        return ctx.wizard.selectStep(0);
      }
      
      await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.');
      return;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤ —Å—Ü–µ–Ω–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ (—à–∞–≥ 3):', error);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      return ctx.scene.leave();
    }
  }
);

module.exports = financeScene; 